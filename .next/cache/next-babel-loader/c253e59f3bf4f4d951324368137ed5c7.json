{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\erocc\\\\Desktop\\\\Projects\\\\next-lambda\\\\pages\\\\ui\\\\swr\\\\[...dynamic].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from \"../../../components/Layout\";\nimport fetch from \"unfetch\";\nimport useSWR from 'swr';\nimport { useRouter } from \"next/router\";\n\nvar Component = function Component() {\n  var _useRouter = useRouter(),\n      dynamic = _useRouter.query.dynamic;\n\n  var _useSWR = useSWR(\"http://localhost:3000/api/mock/\".concat(dynamic.join('/')), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Catch All Dynamic Route SWR\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, _JSON$stringify({\n    dynamic: dynamic\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, _JSON$stringify({\n    data: data\n  }))));\n};\n\nvar fetcher = function fetcher(path) {\n  var res, json;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(path));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Component;","map":{"version":3,"sources":["C:/Users/erocc/Desktop/Projects/next-lambda/pages/ui/swr/[...dynamic].js"],"names":["Layout","fetch","useSWR","useRouter","Component","dynamic","query","join","fetcher","data","error","path","res","json"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,mBAGlBD,SAAS,EAHS;AAAA,MAEXE,OAFW,cAEpBC,KAFoB,CAEXD,OAFW;;AAAA,gBAKEH,MAAM,0CAAmCG,OAAO,CAACE,IAAR,CAAa,GAAb,CAAnC,GAAwDC,OAAxD,CALR;AAAA,MAKdC,IALc,WAKdA,IALc;AAAA,MAKRC,KALQ,WAKRA,KALQ;;AAOtB,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,gBAAe;AAAEJ,IAAAA,OAAO,EAAPA;AAAF,GAAf,CAAN,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,gBAAe;AAAEI,IAAAA,IAAI,EAAJA;AAAF,GAAf,CAAN,CALF,CADF,CADF;AAWD,CArBD;;AAuBA,IAAMD,OAAO,GAAG,SAAVA,OAAU,CAAOG,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIV,KAAK,CAACU,IAAD,CADT;;AAAA;AACRC,UAAAA,GADQ;AAAA;AAAA,2CAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERA,UAAAA,IAFQ;AAAA,2CAGPA,IAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAMA,eAAeT,SAAf","sourcesContent":["import { Layout } from \"../../../components/Layout\";\r\nimport fetch from \"unfetch\";\r\nimport useSWR from 'swr'\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Component = () => {\r\n  const {\r\n    query: { dynamic }\r\n  } = useRouter();\r\n\r\n  const { data, error } = useSWR(`http://localhost:3000/api/mock/${dynamic.join('/')}`, fetcher)\r\n\r\n  if (error) return <div>failed to load</div>\r\n  if (!data) return <div>loading...</div>\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>Catch All Dynamic Route SWR</h1>\r\n        <br/>\r\n        <div>{JSON.stringify({ dynamic })}</div>\r\n        <br />\r\n        <div>{JSON.stringify({ data })}</div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst fetcher = async (path) => {\r\n  const res = await fetch(path)\r\n  const json = await res.json()\r\n  return json\r\n}\r\n\r\nexport default Component;\r\n"]},"metadata":{},"sourceType":"module"}