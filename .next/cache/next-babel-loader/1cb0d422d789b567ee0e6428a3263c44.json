{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erocc\\\\Desktop\\\\Projects\\\\next-lambda\\\\pages\\\\ui\\\\swr\\\\sync.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout } from \"../../../components/Layout\";\nimport fetch from \"unfetch\";\nimport useSWR from 'swr';\n\nconst Component = () => {\n  const {\n    data,\n    error\n  } = useSWR('http://localhost:3000/api/mock/sync', fetcher);\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Syncrounous SWR\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, JSON.stringify(data))));\n};\n\nconst fetcher = async path => {\n  const res = await fetch(path);\n  const json = await res.json();\n  return json;\n};\n\nexport default Component;","map":{"version":3,"sources":["C:/Users/erocc/Desktop/Projects/next-lambda/pages/ui/swr/sync.js"],"names":["Layout","fetch","useSWR","Component","data","error","fetcher","JSON","stringify","path","res","json"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,MAAM,CAAC,qCAAD,EAAwCI,OAAxC,CAA9B;AAEA,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAN,CAHF,CADF,CADF;AASD,CAfD;;AAiBA,MAAME,OAAO,GAAG,MAAOG,IAAP,IAAgB;AAC9B,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAACQ,IAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAOA,IAAP;AACD,CAJD;;AAMA,eAAeR,SAAf","sourcesContent":["import { Layout } from \"../../../components/Layout\";\r\nimport fetch from \"unfetch\";\r\nimport useSWR from 'swr'\r\n\r\nconst Component = () => {\r\n  const { data, error } = useSWR('http://localhost:3000/api/mock/sync', fetcher)\r\n\r\n  if (error) return <div>failed to load</div>\r\n  if (!data) return <div>loading...</div>\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>Syncrounous SWR</h1>\r\n        <br/>\r\n        <div>{JSON.stringify(data)}</div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst fetcher = async (path) => {\r\n  const res = await fetch(path)\r\n  const json = await res.json()\r\n  return json\r\n}\r\n\r\nexport default Component;\r\n"]},"metadata":{},"sourceType":"module"}