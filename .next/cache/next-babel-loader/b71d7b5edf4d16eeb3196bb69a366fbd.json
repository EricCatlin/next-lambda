{"ast":null,"code":"export default (async (req, res) => {\n  // Await a 3 second delay, simualting a slow network call or expensive process\n  await new Promise((res, rej) => setTimeout(() => res(), 3000));\n  res.status(200).json({\n    hello: \"world\",\n    source: \"api/mock/async\"\n  });\n});","map":{"version":3,"sources":["C:/Users/erocc/Desktop/Projects/next-lambda/pages/api/mock/async.js"],"names":["req","res","Promise","rej","setTimeout","status","json","hello","source"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC;AACA,QAAM,IAAIC,OAAJ,CAAY,CAACD,GAAD,EAAME,GAAN,KAAcC,UAAU,CAAC,MAAMH,GAAG,EAAV,EAAc,IAAd,CAApC,CAAN;AACAA,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,IAAAA,KAAK,EAAE,OADY;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAArB;AAID,CAPD","sourcesContent":["export default async (req, res) => {\r\n  // Await a 3 second delay, simualting a slow network call or expensive process\r\n  await new Promise((res, rej) => setTimeout(() => res(), 3000));\r\n  res.status(200).json({\r\n    hello: \"world\",\r\n    source: \"api/mock/async\"\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}